plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    def package_name = "com.kreasirumahaplikasi.mahasiswakreasi"
    def app_alias_name = "Mahasiswa Kreasi"
    def versionPropsFile = file('version.properties')
    flavorDimensions "default"

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def runTasks = gradle.startParameter.taskNames

        if (runTasks.grep(':app:assembleRelease')) {

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(
                            output.outputFile.parent,
                            output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
                }
            }
        }

        def version_major = versionProps['VERSION_MAJOR'].toInteger()
        def version_minor = versionProps['VERSION_MINOR'].toInteger()
        def version_maintenance = versionProps['VERSION_MAINTENANCE'].toInteger()
        def version_build = versionProps['VERSION_BUILD'].toInteger() + 1
        def version_code = versionProps['VERSION_CODE'].toInteger()

        versionProps['VERSION_MAJOR'] = version_major.toString()
        versionProps['VERSION_MINOR'] = version_minor.toString()
        versionProps['VERSION_MAINTENANCE'] = version_maintenance.toString()
        versionProps['VERSION_BUILD'] = version_build.toString()
        versionProps['VERSION_CODE'] = version_code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId package_name
            minSdkVersion 19
            targetSdkVersion 30
            versionCode version_code
            versionName "${version_major}.${version_minor}.${version_maintenance}.${version_build}"
            multiDexEnabled true
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        productFlavors {
            development {
                applicationId package_name + ".dev"
                versionName "${version_major}.${version_minor}.${version_maintenance}.${version_build}"
                def makeAConstant = { constantName, constantValue ->
                    manifestPlaceholders += [(constantName): constantValue]
                    buildConfigField "String", "${constantName}", "\"${constantValue}\""
                }
                resValue "string", "app_name", "Dev " + app_alias_name
                makeAConstant("application_name", "Dev " + app_alias_name)
                manifestPlaceholders = [
                        appIcon: "@mipmap/ic_launcher_staging",
                        appIconRound: "@mipmap/ic_launcher_staging"
                ]
            }

            production {
                applicationId package_name

                if(version_maintenance == 0){
                    versionName "${version_major}.${version_minor}"
                } else {
                    versionName "${version_major}.${version_minor}.${version_maintenance}"
                }


                def makeAConstant = { constantName, constantValue ->
                    manifestPlaceholders += [(constantName): constantValue]
                    buildConfigField "String", "${constantName}", "\"${constantValue}\""
                }
                makeAConstant("application_name", app_alias_name)
                resValue "string", "app_name", app_alias_name
                manifestPlaceholders = [
                        appIcon: "@mipmap/ic_launcher",
                        appIconRound: "@mipmap/ic_launcher_round"
                ]
            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // rx-android
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'

    // Injection
    implementation 'org.koin:koin-core:2.0.1'
    testImplementation 'org.koin:koin-test:2.0.1'
    implementation 'org.koin:koin-android:2.0.1'
    implementation 'org.koin:koin-androidx-scope:2.0.1'
    implementation 'org.koin:koin-androidx-viewmodel:2.0.1'

    // coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactive:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    //anko
    implementation 'org.jetbrains.anko:anko:0.10.5'

    //validator
    implementation 'com.afollestad:vvalidator:0.5.1'

    // coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactive:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    // room
    implementation 'androidx.room:room-runtime:2.2.5'
    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'

    implementation 'com.github.almuwahhid:alframeworkx:1.1.0'

    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'

    implementation 'com.facebook.shimmer:shimmer:0.5.0'
}